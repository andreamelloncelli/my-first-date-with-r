{
    "collab_server" : "",
    "contents" : "## ----load_ggplot2, message=FALSE-----------------------------------------\nrequire(ggplot2)\n\n## ----load_qdata, message=FALSE-------------------------------------------\nrequire(qdata)\n\n## ----complete_plot, echo=FALSE,fig.width = 7-----------------------------\n# Load people dataset\ndata(people)\n\n# Generate plot\nggplot(people, aes(x = Weight, y = Height, colour = Area)) +\n  geom_point() +\n  stat_smooth(method = \"lm\", se = F) +\n  scale_colour_brewer(palette=\"Set1\") +\n  coord_equal() +\n  facet_grid(. ~ Area) +\n  ggtitle(\"Scatterplot of weight and height of \\n italian people by geographical area\") + \n    xlab(\"Weight (kg)\") +\n    ylab(\"Height (cm)\") +\n  theme(plot.background = element_blank(),\n    axis.text = element_text(colour = \"black\"),\n    axis.ticks = element_line(colour = \"black\"),\n    axis.line.x = element_line(colour = \"black\"),\n    axis.line.y = element_line(colour = \"black\"),\n    axis.title = element_text(colour = \"black\", size = 14, face = \"bold.italic\"),\n    strip.background = element_rect(colour = \"black\"),\n    strip.text = element_text(colour = \"black\", face = \"bold.italic\", size = 12),\n    plot.title = element_text(colour = \"black\", size = 20, face = \"bold.italic\", hjust = 0.5),\n    panel.spacing = unit(1, \"lines\"),\n    legend.position=\"none\")\n\n## ----data_1, eval=FALSE--------------------------------------------------\n## # people dataset\n## data(people)\n\n## ----data_2--------------------------------------------------------------\nhead(people)\n\n## ----aes-----------------------------------------------------------------\nggplot(data = people, aes(x = Weight, y = Height))\n\n## ----layers--------------------------------------------------------------\n# Scatterplot of the relationship between weight and height with regression line\nggplot(people, aes(x = Weight, y = Height)) +\n  geom_point() + # layer 1 (draw points)\n  stat_smooth(method = \"lm\", se = FALSE) # layer 2 (draw regression line) \n\n## ----scales--------------------------------------------------------------\n# map Area to colour in aes() and change the default colours of colour scale  \nggplot(people, aes(x = Weight, y = Height, colour = Area)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_colour_brewer(palette=\"Set1\")\n\n## ----coord---------------------------------------------------------------\n# Change coordinate system \nggplot(people, aes(x = Weight, y = Height, colour = Area)) +\n  geom_point() +\n  stat_smooth(method = \"lm\", se = FALSE) +\n  scale_colour_brewer(palette=\"Set1\") + \n  coord_equal() # change coord system (one unit on the x-axis is the same length as one unit on the y-axis)\n\n## ----facets, fig.width = 7-----------------------------------------------\n# Generate a plot for each geographical area\nggplot(people, aes(x = Weight, y = Height, colour = Area)) +\n  geom_point() +\n  stat_smooth(method = \"lm\", se = FALSE) + \n  scale_colour_brewer(palette=\"Set1\") +\n  coord_equal() +\n  facet_grid(. ~ Area)\n\n## ----theme, fig.width = 8------------------------------------------------\n# Customize the appearance of the plot\nggplot(people, aes(x = Weight, y = Height, colour = Area)) +\n  geom_point() +\n  stat_smooth(method = \"lm\", se = FALSE) +\n  scale_colour_brewer(palette=\"Set1\") + \n  coord_equal() +\n  facet_grid(. ~ Area) +\n  ggtitle(\"Scatterplot of weight and height of \\n italian people by geographical area\") + # set title\n    xlab(\"Weight (kg)\") + # set x axis title\n    ylab(\"Height (cm)\") + # set y axis title\n  theme(plot.background = element_blank(), # customize plot background\n    axis.text = element_text(colour = \"black\"), # customize axes text\n    axis.ticks = element_line(colour = \"black\"), # customize axes ticks\n    axis.line.x = element_line(colour = \"black\"), # customize x axis line\n    axis.line.y = element_line(colour = \"black\"), # customize y axis line\n    axis.title = element_text(colour = \"black\", size = 14, face = \"bold.italic\"), # customize axes titles\n    strip.background = element_rect(colour = \"black\"), # customize background of facet labels\n    strip.text = element_text(colour = \"black\", face = \"bold.italic\", size = 12), # customize facet labels\n    plot.title = element_text(colour = \"black\", size = 20, face = \"bold.italic\", hjust = 0.5), # customize plot title\n    panel.spacing = unit(1, \"lines\"), # customize panels spacing\n    legend.position = \"none\") # remove the legend\n\n## ----barplot-------------------------------------------------------------\n# base plot: key building blocks (data, aes, layer)\nggplot(data = people, mapping = aes(x = Area)) + \n  geom_bar(fill = \"royalblue\", colour = \"black\", width = 0.5)\n\n# customized plot: key building blocks + scales + theme\nggplot(data = people, mapping = aes(x = Area, fill = Gender)) + # map Gender to fill scale\n  geom_bar(position = \"dodge\", width = 0.8, colour=\"black\") + # customize bar positions\n       scale_fill_brewer(palette = \"Accent\") + # customize fill scale \n       ggtitle(\"Barplot of Area by Gender\") + # set title\n       theme(axis.title.y = element_text(size = rel(1.5), angle = 90), # customize y axis title\n             axis.title.x = element_text(size = rel(1.5)), # customize x axis title\n             axis.text.x = element_text(colour=\"black\"), # customize x axis text\n             plot.title = element_text(size = rel(2)), # customize plot title\n             legend.title = element_text(size = rel(1.5)))  # customize legend title\n\n## ----histogram-----------------------------------------------------------\n# base plot: key building blocks (data, aes, layer)\nggplot(data=people, mapping=aes(x=Weight)) +\n  geom_histogram(fill=\"#2B4C6F\", colour=\"#3690c0\", binwidth=5) \n  \n# customized plot: key building blocks + scales + facet + theme\nggplot(data=people, mapping=aes(x=Weight)) +\n  geom_histogram(mapping=aes(fill=Area), binwidth=5, colour=\"black\") + # map Area to fill scale \n  scale_fill_manual(values = c(\"#70D6FF\", \"#FF70A6\", \"#FF9770\", \"#E9FF70\")) + # customize fill scale \n  facet_wrap( ~ Area) + # generate a panel for each Area level\n  theme(axis.text = element_text(colour = \"black\"), # customize axes text\n    axis.ticks = element_line(colour = \"black\"), # customize axes\n    axis.title = element_text(colour = \"black\", size = 14, face = \"bold.italic\"), # customize axes title\n    strip.background = element_rect(colour = \"black\", fill=), # customize background of facet labels\n    strip.text = element_text(colour = \"black\", face = \"bold.italic\", size = 12), # customize facet labels\n    plot.title = element_text(colour = \"black\", size = 20, face = \"bold.italic\"), # customize plot title\n    legend.position = \"none\") # remove legend\n\n## ----boxplot-------------------------------------------------------------\n# base plot: key building blocks (data, aes, layer)\nggplot(data=people, aes(x=Area, y=Weight)) + \n  geom_boxplot(fill=\"#74a9cf\", colour=\"#034e7b\") \n\n# customized plot: key building blocks + scale + layer (stat) + theme \nggplot(data=people, aes(x=Area, y=Weight, fill=Gender)) + # map Gender to fill \n  geom_boxplot(outlier.size = 1.5, outlier.shape = 21, width = .5) + \n  stat_summary(fun.y = \"mean\", geom = \"point\", shape = 23, size = 2, fill = \"red\") + # compute and plot distributions means  \n  ggtitle(\"Boxplot of Weight by Area and Gender\") + # set title\n  theme_classic() # change theme\n\n## ----load_orange_dataset-------------------------------------------------\ndata(orange)\nhead(orange)\n\n## ----lineplot, message=FALSE---------------------------------------------\nrequire(dplyr)\n# base plot of 1 tree: key components(data, aes, layer)\nggplot(data=orange %>% filter(Tree==1), mapping=aes(x=age, y=circumference)) + \n  geom_line(colour= \"forestgreen\", size=1.3)\n\n# customized plot of 5 trees: key components(data, aes, layer) + scales + theme\nggplot(data=Orange, mapping=aes(x=age, y=circumference, colour=Tree)) + # Map Tree to colour scale\n  geom_line(mapping=aes(linetype=Tree)) + # Map Tree to linetype scale\n  scale_colour_manual(values = c(\"palegreen\", \"green\", \"mediumseagreen\", \"forestgreen\" ,\"darkgreen\")) + # customize colours\n  ylim(0,250) + xlim(0,1600) + # set axis limits \n  ggtitle(\"Lineplot of Orange Tree Growth\") + # set title\n  xlab(\"Age\") + ylab(\"Circumference\") + # set axes titles\n  theme(axis.text = element_text(colour = \"black\"), # customize axis text\n  axis.ticks = element_line(colour = \"black\"), # customize axis ticks\n  axis.title = element_text(colour = \"black\", size = 14, face = \"bold\"), # customize axes title\n  plot.title = element_text(colour = \"black\", size = 20, face = \"bold\"), # customize plot title\n  legend.text = element_text(colour=\"black\", size=10), # customize legend text\n  legend.title = element_text(colour = \"black\", size = 14, face = \"bold\")) # customize legend title\n\n",
    "created" : 1481550358438.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "583597970",
    "id" : "A8C9ACF2",
    "lastKnownWriteTime" : 1481549764,
    "last_content_update" : 1481549764,
    "path" : "~/Desktop/my-first-date-with-r-master/manual/purl/09-data-visualization.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}